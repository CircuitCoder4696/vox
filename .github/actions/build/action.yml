inputs:
  tag:
    description: 'Tag to upload artifacts to'
    required: true
  exe:
    description: 'Name of the executable file'
    required: true
  platform:
    description: 'Name of the target platform (ex: windows-amd64, linux-arm64)'
    required: true
  dc_full:
    description: 'Compiler with version (ex: ldc-1.23.0)'
    required: true
  dc:
    description: 'Compiler exe name (ex: ldc2)'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: dlang-community/setup-dlang@v1
      with:
        compiler: ${{ inputs.dc_full }}
    - name: Build release
      shell: bash
      run: |
        cd source
        ${{ inputs.dc }} -m64 -O3 -release -boundscheck=off -enable-inlining -flto=full --defaultlib=phobos2-ldc-lto,druntime-ldc-lto -d-version=cli -of=${{inputs.exe}} -i main.d
    - uses: actions/upload-artifact@v2
      with:
        name: ${{inputs.platform}}
        path: ./source/${{inputs.exe}}
    # `gh release` is only available in v1.0.0, while runner only has v0.12.0
    - name: Install GH CLI
      shell: bash
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
        sudo apt-add-repository https://cli.github.com/packages
        sudo apt -qq update
        sudo apt -qq install gh
    # Create CI release and upload builds
    - name: Upload
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: |
        gh release create CI './linux-amd64/tjc#linux-amd64' './windows-amd64/tjc.exe#windows-amd64'
